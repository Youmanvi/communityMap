# CommunityMap Application Requirements
# This file lists all the software and dependencies needed to run the CommunityMap application

# =============================================================================
# SYSTEM REQUIREMENTS
# =============================================================================

# Operating System
# - Windows 10+ (64-bit)
# - macOS 10.15+ 
# - Linux (Ubuntu 20.04+, CentOS 8+, or equivalent)

# Hardware Requirements
# - RAM: Minimum 4GB (8GB recommended)
# - Storage: 2GB free space
# - CPU: 2+ cores recommended

# =============================================================================
# BACKEND DEPENDENCIES (Java/Spring Boot)
# =============================================================================

# Java Runtime Environment
java>=17.0.0

# Maven Build Tool
maven>=3.6.0

# MongoDB Database
mongodb>=4.4.0

# =============================================================================
# FRONTEND DEPENDENCIES (Node.js/React)
# =============================================================================

# Node.js Runtime
nodejs>=16.0.0

# npm (comes with Node.js)
npm>=8.0.0

# =============================================================================
# DEVELOPMENT TOOLS (Optional)
# =============================================================================

# Git Version Control
git>=2.30.0

# IDE/Editor (choose one)
# - IntelliJ IDEA Community Edition
# - Visual Studio Code
# - Eclipse IDE

# Browser (for testing)
# - Chrome 90+
# - Firefox 88+
# - Safari 14+
# - Edge 90+

# =============================================================================
# PACKAGE MANAGERS
# =============================================================================

# Windows Package Manager (optional)
# winget install OpenJDK.OpenJDK.17
# winget install MongoDB.Server
# winget install OpenJS.NodeJS

# macOS Package Manager (optional)
# brew install openjdk@17
# brew install mongodb-community
# brew install node

# Linux Package Manager (Ubuntu/Debian)
# sudo apt update
# sudo apt install openjdk-17-jdk
# sudo apt install mongodb
# sudo apt install nodejs npm

# =============================================================================
# ENVIRONMENT VARIABLES
# =============================================================================

# Backend Configuration
MONGODB_URI=mongodb://localhost:27017/community_map
SERVER_PORT=8080

# Frontend Configuration
REACT_APP_API_URL=http://localhost:8080

# =============================================================================
# QUICK INSTALLATION COMMANDS
# =============================================================================

# Windows (PowerShell)
# java -version
# mvn --version
# node --version
# mongod --version

# macOS/Linux (Terminal)
# java -version
# mvn --version
# node --version
# mongod --version

# =============================================================================
# VERIFICATION COMMANDS
# =============================================================================

# Check Java installation
# java -version

# Check Maven installation
# mvn --version

# Check Node.js installation
# node --version
# npm --version

# Check MongoDB installation
# mongod --version
# mongosh --version

# =============================================================================
# PROJECT-SPECIFIC DEPENDENCIES
# =============================================================================

# Backend Maven Dependencies (managed by pom.xml)
# - Spring Boot 3.2.0
# - Spring Data MongoDB
# - Spring Boot Validation
# - Spring Boot Actuator
# - Lombok
# - TestContainers
# - JUnit Jupiter

# Frontend npm Dependencies (managed by package.json)
# - React 18.2.0
# - React-Leaflet 4.2.1
# - Leaflet 1.9.4
# - Axios 1.6.0
# - React Scripts 5.0.1

# =============================================================================
# INSTALLATION NOTES
# =============================================================================

# 1. Install Java 17+ from https://adoptium.net/
# 2. Install Maven from https://maven.apache.org/download.cgi
# 3. Install MongoDB from https://www.mongodb.com/try/download/community
# 4. Install Node.js from https://nodejs.org/
# 5. Clone the repository
# 6. Run: mvn clean install (backend)
# 7. Run: cd frontend && npm install (frontend)
# 8. Start MongoDB: mongod
# 9. Start backend: mvn spring-boot:run
# 10. Start frontend: cd frontend && npm start

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common Issues:
# - Java version mismatch: Ensure Java 17+ is installed
# - MongoDB connection: Ensure MongoDB is running on port 27017
# - Port conflicts: Check if ports 8080 and 3000 are available
# - Node modules: Delete node_modules and run npm install
# - Maven dependencies: Run mvn clean install

# =============================================================================
# SUPPORTED VERSIONS
# =============================================================================

# Java: 17, 18, 19, 20, 21
# Maven: 3.6, 3.8, 3.9
# MongoDB: 4.4, 5.0, 6.0, 7.0
# Node.js: 16, 18, 20
# npm: 8, 9, 10

# =============================================================================
# SECURITY NOTES
# =============================================================================

# - Keep all software updated to latest stable versions
# - Use environment variables for sensitive configuration
# - Enable MongoDB authentication in production
# - Use HTTPS in production environments
# - Regularly update dependencies for security patches
